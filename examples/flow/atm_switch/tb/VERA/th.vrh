/////////////////////////////////////////////////////////////////
// Vera Header file created from th.vr 
/////////////////////////////////////////////////////////////////
#ifndef INC__TMP_TH_VRH
#define INC__TMP_TH_VRH

//SHAWN
#ifdef VERA5
port utopia_rx_port {
  data ;
  soc ;
  enb ;
  empty_clav ;
  clk ;
}
port utopia_tx_port {
  data ;
  soc ;
  enb ;
  full_clav ;
  clk ;
}
#endif

interface top {
  input 	clk CLOCK;
  output	rst PHOLD #2;
  input  [31:0]	owner PSAMPLE #-1;
}
interface utopia_rx_0 {
  input 	clk CLOCK;
  output [7:0]	data PHOLD #1;
  output	soc PHOLD #1;
  input 	en PSAMPLE #-10;
  output	empty PHOLD #1;
}
interface utopia_rx_1 {
  input 	clk CLOCK;
  output [7:0]	data PHOLD #1;
  output	soc PHOLD #1;
  input 	en PSAMPLE #-10;
  output	empty PHOLD #1;
}
interface utopia_rx_2 {
  input 	clk CLOCK;
  output [7:0]	data PHOLD #1;
  output	soc PHOLD #1;
  input 	en PSAMPLE #-10;
  output	empty PHOLD #1;
}
interface utopia_rx_3 {
  input 	clk CLOCK;
  output [7:0]	data PHOLD #1;
  output	soc PHOLD #1;
  input 	en PSAMPLE #-10;
  output	empty PHOLD #1;
}
interface utopia_rx_4 {
  input 	clk CLOCK;
  output [7:0]	data PHOLD #1;
  output	soc PHOLD #1;
  input 	en PSAMPLE #-10;
  output	empty PHOLD #1;
}
interface utopia_rx_5 {
  input 	clk CLOCK;
  output [7:0]	data PHOLD #1;
  output	soc PHOLD #1;
  input 	en PSAMPLE #-10;
  output	empty PHOLD #1;
}
interface utopia_rx_6 {
  input 	clk CLOCK;
  output [7:0]	data PHOLD #1;
  output	soc PHOLD #1;
  input 	en PSAMPLE #-10;
  output	empty PHOLD #1;
}
interface utopia_rx_7 {
  input 	clk CLOCK;
  output [7:0]	data PHOLD #1;
  output	soc PHOLD #1;
  input 	en PSAMPLE #-10;
  output	empty PHOLD #1;
}
interface utopia_tx_0 {
  input 	clk CLOCK;
  input  [7:0]	data PSAMPLE #-10;
  input 	soc PSAMPLE #-10;
  input 	en PSAMPLE #-10;
  output	full PHOLD #1;
}
interface utopia_tx_1 {
  input 	clk CLOCK;
  input  [7:0]	data PSAMPLE #-10;
  input 	soc PSAMPLE #-10;
  input 	en PSAMPLE #-10;
  output	full PHOLD #1;
}
interface utopia_tx_2 {
  input 	clk CLOCK;
  input  [7:0]	data PSAMPLE #-10;
  input 	soc PSAMPLE #-10;
  input 	en PSAMPLE #-10;
  output	full PHOLD #1;
}
interface utopia_tx_3 {
  input 	clk CLOCK;
  input  [7:0]	data PSAMPLE #-10;
  input 	soc PSAMPLE #-10;
  input 	en PSAMPLE #-10;
  output	full PHOLD #1;
}
interface utopia_tx_4 {
  input 	clk CLOCK;
  input  [7:0]	data PSAMPLE #-10;
  input 	soc PSAMPLE #-10;
  input 	en PSAMPLE #-10;
  output	full PHOLD #1;
}
interface utopia_tx_5 {
  input 	clk CLOCK;
  input  [7:0]	data PSAMPLE #-10;
  input 	soc PSAMPLE #-10;
  input 	en PSAMPLE #-10;
  output	full PHOLD #1;
}
interface utopia_tx_6 {
  input 	clk CLOCK;
  input  [7:0]	data PSAMPLE #-10;
  input 	soc PSAMPLE #-10;
  input 	en PSAMPLE #-10;
  output	full PHOLD #1;
}
interface utopia_tx_7 {
  input 	clk CLOCK;
  input  [7:0]	data PSAMPLE #-10;
  input 	soc PSAMPLE #-10;
  input 	en PSAMPLE #-10;
  output	full PHOLD #1;
}
typedef class list ;
bind utopia_rx_port utopia_rx_port_0 {
 data utopia_rx_0.data ;
 soc utopia_rx_0.soc ;
 enb utopia_rx_0.en ;
 empty_clav utopia_rx_0.empty ;
 clk utopia_rx_0.clk ;
}
bind utopia_rx_port utopia_rx_port_1 {
 data utopia_rx_1.data ;
 soc utopia_rx_1.soc ;
 enb utopia_rx_1.en ;
 empty_clav utopia_rx_1.empty ;
 clk utopia_rx_1.clk ;
}
bind utopia_rx_port utopia_rx_port_2 {
 data utopia_rx_2.data ;
 soc utopia_rx_2.soc ;
 enb utopia_rx_2.en ;
 empty_clav utopia_rx_2.empty ;
 clk utopia_rx_2.clk ;
}
bind utopia_rx_port utopia_rx_port_3 {
 data utopia_rx_3.data ;
 soc utopia_rx_3.soc ;
 enb utopia_rx_3.en ;
 empty_clav utopia_rx_3.empty ;
 clk utopia_rx_3.clk ;
}
bind utopia_rx_port utopia_rx_port_4 {
 data utopia_rx_4.data ;
 soc utopia_rx_4.soc ;
 enb utopia_rx_4.en ;
 empty_clav utopia_rx_4.empty ;
 clk utopia_rx_4.clk ;
}
bind utopia_rx_port utopia_rx_port_5 {
 data utopia_rx_5.data ;
 soc utopia_rx_5.soc ;
 enb utopia_rx_5.en ;
 empty_clav utopia_rx_5.empty ;
 clk utopia_rx_5.clk ;
}
bind utopia_rx_port utopia_rx_port_6 {
 data utopia_rx_6.data ;
 soc utopia_rx_6.soc ;
 enb utopia_rx_6.en ;
 empty_clav utopia_rx_6.empty ;
 clk utopia_rx_6.clk ;
}
bind utopia_rx_port utopia_rx_port_7 {
 data utopia_rx_7.data ;
 soc utopia_rx_7.soc ;
 enb utopia_rx_7.en ;
 empty_clav utopia_rx_7.empty ;
 clk utopia_rx_7.clk ;
}
bind utopia_tx_port utopia_tx_port_0 {
 data utopia_tx_0.data ;
 soc utopia_tx_0.soc ;
 enb utopia_tx_0.en ;
 full_clav utopia_tx_0.full ;
 clk utopia_tx_0.clk ;
}
bind utopia_tx_port utopia_tx_port_1 {
 data utopia_tx_1.data ;
 soc utopia_tx_1.soc ;
 enb utopia_tx_1.en ;
 full_clav utopia_tx_1.full ;
 clk utopia_tx_1.clk ;
}
bind utopia_tx_port utopia_tx_port_2 {
 data utopia_tx_2.data ;
 soc utopia_tx_2.soc ;
 enb utopia_tx_2.en ;
 full_clav utopia_tx_2.full ;
 clk utopia_tx_2.clk ;
}
bind utopia_tx_port utopia_tx_port_3 {
 data utopia_tx_3.data ;
 soc utopia_tx_3.soc ;
 enb utopia_tx_3.en ;
 full_clav utopia_tx_3.full ;
 clk utopia_tx_3.clk ;
}
bind utopia_tx_port utopia_tx_port_4 {
 data utopia_tx_4.data ;
 soc utopia_tx_4.soc ;
 enb utopia_tx_4.en ;
 full_clav utopia_tx_4.full ;
 clk utopia_tx_4.clk ;
}
bind utopia_tx_port utopia_tx_port_5 {
 data utopia_tx_5.data ;
 soc utopia_tx_5.soc ;
 enb utopia_tx_5.en ;
 full_clav utopia_tx_5.full ;
 clk utopia_tx_5.clk ;
}
bind utopia_tx_port utopia_tx_port_6 {
 data utopia_tx_6.data ;
 soc utopia_tx_6.soc ;
 enb utopia_tx_6.en ;
 full_clav utopia_tx_6.full ;
 clk utopia_tx_6.clk ;
}
bind utopia_tx_port utopia_tx_port_7 {
 data utopia_tx_7.data ;
 soc utopia_tx_7.soc ;
 enb utopia_tx_7.en ;
 full_clav utopia_tx_7.full ;
 clk utopia_tx_7.clk ;
}
extern verilog_task vera_sc_write (
  bit [7:0] vpi,
  bit [15:0] sc_mask
);
extern verilog_task vera_qos_read (
  bit [7:0] vpi,
  var bit [15:0] qos_data
);
extern class harness { 
  syslog log;
  utopia_phy_tx atm_gen [8];
  utopia_phy_rx atm_mon [8];
  task reset (
  );
  task sc_write (
    bit [7:0] vpi,
    bit [15:0] sc_mask
  );
  task qos_read (
    bit [7:0] vpi,
    var bit [15:0] qos_data
  );
}
extern integer status;
extern harness th;

#endif
